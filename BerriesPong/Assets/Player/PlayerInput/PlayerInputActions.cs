//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.1.0
//     from Assets/Player/PlayerInput/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""PlayerControlsTop"",
            ""id"": ""f39b4b64-db20-4456-8625-6f89ce161f83"",
            ""actions"": [
                {
                    ""name"": ""TouchPress"",
                    ""type"": ""Button"",
                    ""id"": ""35c47b6b-a27d-4bed-99cb-393aac77cd15"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)""
                },
                {
                    ""name"": ""TouchPosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2a05b563-f770-44bb-97e8-3c9e51d06187"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""TouchDelta"",
                    ""type"": ""PassThrough"",
                    ""id"": ""52351556-59e1-4603-882c-b0f94b7ad6d1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8cee5a02-d971-4b26-8795-1c7b3b721c95"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3033d4ce-147a-4e66-ac7e-ce058cd40c0a"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""099eff76-ba25-485b-96dd-0d4131af4b69"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3b1aaa3-1adc-48f6-8a74-2a8c3868e08d"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4de35e8c-1110-4c1a-acba-b522c4cb62a0"",
                    ""path"": ""<Touchscreen>/touch0/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d3cf1d0-82a4-434f-ac56-b8956db6c857"",
                    ""path"": ""<Touchscreen>/touch1/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerControlsBottom"",
            ""id"": ""00f3db76-0cd8-4fb0-a0e1-a4aa7d69bdbe"",
            ""actions"": [
                {
                    ""name"": ""TouchPress"",
                    ""type"": ""Button"",
                    ""id"": ""f3833279-a1cd-4ca4-9710-215eb1bfa41b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)""
                },
                {
                    ""name"": ""TouchPosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""0b8bf16c-4cd9-42c7-bfbb-0a1795f1633c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""TouchDelta"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a1690c94-2240-4ec6-95f7-b31f5ec402ab"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""72c6e75c-4b34-41a1-a360-21ad1c20019f"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e85ce0da-47cd-427a-8b45-c0e405537a86"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30d3afdb-5233-4006-acde-56628c2c1448"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34e0d9eb-664a-4fcc-91b1-34f79e9eb722"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7defa6c-44ce-4c6f-a496-4c694dda5209"",
                    ""path"": ""<Touchscreen>/touch0/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa3e7943-cd4e-4241-a6fc-41b91443fa7b"",
                    ""path"": ""<Touchscreen>/touch1/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerControlsTop
        m_PlayerControlsTop = asset.FindActionMap("PlayerControlsTop", throwIfNotFound: true);
        m_PlayerControlsTop_TouchPress = m_PlayerControlsTop.FindAction("TouchPress", throwIfNotFound: true);
        m_PlayerControlsTop_TouchPosition = m_PlayerControlsTop.FindAction("TouchPosition", throwIfNotFound: true);
        m_PlayerControlsTop_TouchDelta = m_PlayerControlsTop.FindAction("TouchDelta", throwIfNotFound: true);
        // PlayerControlsBottom
        m_PlayerControlsBottom = asset.FindActionMap("PlayerControlsBottom", throwIfNotFound: true);
        m_PlayerControlsBottom_TouchPress = m_PlayerControlsBottom.FindAction("TouchPress", throwIfNotFound: true);
        m_PlayerControlsBottom_TouchPosition = m_PlayerControlsBottom.FindAction("TouchPosition", throwIfNotFound: true);
        m_PlayerControlsBottom_TouchDelta = m_PlayerControlsBottom.FindAction("TouchDelta", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerControlsTop
    private readonly InputActionMap m_PlayerControlsTop;
    private IPlayerControlsTopActions m_PlayerControlsTopActionsCallbackInterface;
    private readonly InputAction m_PlayerControlsTop_TouchPress;
    private readonly InputAction m_PlayerControlsTop_TouchPosition;
    private readonly InputAction m_PlayerControlsTop_TouchDelta;
    public struct PlayerControlsTopActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerControlsTopActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @TouchPress => m_Wrapper.m_PlayerControlsTop_TouchPress;
        public InputAction @TouchPosition => m_Wrapper.m_PlayerControlsTop_TouchPosition;
        public InputAction @TouchDelta => m_Wrapper.m_PlayerControlsTop_TouchDelta;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControlsTop; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControlsTopActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerControlsTopActions instance)
        {
            if (m_Wrapper.m_PlayerControlsTopActionsCallbackInterface != null)
            {
                @TouchPress.started -= m_Wrapper.m_PlayerControlsTopActionsCallbackInterface.OnTouchPress;
                @TouchPress.performed -= m_Wrapper.m_PlayerControlsTopActionsCallbackInterface.OnTouchPress;
                @TouchPress.canceled -= m_Wrapper.m_PlayerControlsTopActionsCallbackInterface.OnTouchPress;
                @TouchPosition.started -= m_Wrapper.m_PlayerControlsTopActionsCallbackInterface.OnTouchPosition;
                @TouchPosition.performed -= m_Wrapper.m_PlayerControlsTopActionsCallbackInterface.OnTouchPosition;
                @TouchPosition.canceled -= m_Wrapper.m_PlayerControlsTopActionsCallbackInterface.OnTouchPosition;
                @TouchDelta.started -= m_Wrapper.m_PlayerControlsTopActionsCallbackInterface.OnTouchDelta;
                @TouchDelta.performed -= m_Wrapper.m_PlayerControlsTopActionsCallbackInterface.OnTouchDelta;
                @TouchDelta.canceled -= m_Wrapper.m_PlayerControlsTopActionsCallbackInterface.OnTouchDelta;
            }
            m_Wrapper.m_PlayerControlsTopActionsCallbackInterface = instance;
            if (instance != null)
            {
                @TouchPress.started += instance.OnTouchPress;
                @TouchPress.performed += instance.OnTouchPress;
                @TouchPress.canceled += instance.OnTouchPress;
                @TouchPosition.started += instance.OnTouchPosition;
                @TouchPosition.performed += instance.OnTouchPosition;
                @TouchPosition.canceled += instance.OnTouchPosition;
                @TouchDelta.started += instance.OnTouchDelta;
                @TouchDelta.performed += instance.OnTouchDelta;
                @TouchDelta.canceled += instance.OnTouchDelta;
            }
        }
    }
    public PlayerControlsTopActions @PlayerControlsTop => new PlayerControlsTopActions(this);

    // PlayerControlsBottom
    private readonly InputActionMap m_PlayerControlsBottom;
    private IPlayerControlsBottomActions m_PlayerControlsBottomActionsCallbackInterface;
    private readonly InputAction m_PlayerControlsBottom_TouchPress;
    private readonly InputAction m_PlayerControlsBottom_TouchPosition;
    private readonly InputAction m_PlayerControlsBottom_TouchDelta;
    public struct PlayerControlsBottomActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerControlsBottomActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @TouchPress => m_Wrapper.m_PlayerControlsBottom_TouchPress;
        public InputAction @TouchPosition => m_Wrapper.m_PlayerControlsBottom_TouchPosition;
        public InputAction @TouchDelta => m_Wrapper.m_PlayerControlsBottom_TouchDelta;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControlsBottom; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControlsBottomActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerControlsBottomActions instance)
        {
            if (m_Wrapper.m_PlayerControlsBottomActionsCallbackInterface != null)
            {
                @TouchPress.started -= m_Wrapper.m_PlayerControlsBottomActionsCallbackInterface.OnTouchPress;
                @TouchPress.performed -= m_Wrapper.m_PlayerControlsBottomActionsCallbackInterface.OnTouchPress;
                @TouchPress.canceled -= m_Wrapper.m_PlayerControlsBottomActionsCallbackInterface.OnTouchPress;
                @TouchPosition.started -= m_Wrapper.m_PlayerControlsBottomActionsCallbackInterface.OnTouchPosition;
                @TouchPosition.performed -= m_Wrapper.m_PlayerControlsBottomActionsCallbackInterface.OnTouchPosition;
                @TouchPosition.canceled -= m_Wrapper.m_PlayerControlsBottomActionsCallbackInterface.OnTouchPosition;
                @TouchDelta.started -= m_Wrapper.m_PlayerControlsBottomActionsCallbackInterface.OnTouchDelta;
                @TouchDelta.performed -= m_Wrapper.m_PlayerControlsBottomActionsCallbackInterface.OnTouchDelta;
                @TouchDelta.canceled -= m_Wrapper.m_PlayerControlsBottomActionsCallbackInterface.OnTouchDelta;
            }
            m_Wrapper.m_PlayerControlsBottomActionsCallbackInterface = instance;
            if (instance != null)
            {
                @TouchPress.started += instance.OnTouchPress;
                @TouchPress.performed += instance.OnTouchPress;
                @TouchPress.canceled += instance.OnTouchPress;
                @TouchPosition.started += instance.OnTouchPosition;
                @TouchPosition.performed += instance.OnTouchPosition;
                @TouchPosition.canceled += instance.OnTouchPosition;
                @TouchDelta.started += instance.OnTouchDelta;
                @TouchDelta.performed += instance.OnTouchDelta;
                @TouchDelta.canceled += instance.OnTouchDelta;
            }
        }
    }
    public PlayerControlsBottomActions @PlayerControlsBottom => new PlayerControlsBottomActions(this);
    public interface IPlayerControlsTopActions
    {
        void OnTouchPress(InputAction.CallbackContext context);
        void OnTouchPosition(InputAction.CallbackContext context);
        void OnTouchDelta(InputAction.CallbackContext context);
    }
    public interface IPlayerControlsBottomActions
    {
        void OnTouchPress(InputAction.CallbackContext context);
        void OnTouchPosition(InputAction.CallbackContext context);
        void OnTouchDelta(InputAction.CallbackContext context);
    }
}
